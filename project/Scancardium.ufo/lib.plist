<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>com.schriftgestaltung.disablesAutomaticAlignment</key>
	<true/>
	<key>com.schriftgestaltung.fontMaster.customParameters</key>
	<array>
		<dict>
			<key>name</key>
			<string>prep Table Assembly</string>
			<key>value</key>
			<string>PUSHW[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
1 1 2 
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
2 1 2 
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 8 values pushed */
2 64 51 40 29 17 0 8 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 8 values pushed */
1 62 51 40 29 17 0 8 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
3 2 7 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
RDTG[ ]	/* RoundDownToGrid */
ROUND[01]	/* Round */
RTG[ ]	/* RoundToGrid */
WCVTP[ ]	/* WriteCVTInPixels */</string>
		</dict>
		<dict>
			<key>name</key>
			<string>fpgm Table Assembly</string>
			<key>value</key>
			<string>PUSHW[ ]	/* 1 value pushed */
0 
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1 
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
511 
SCANCTRL[ ]	/* ScanConversionControl */
PUSHW[ ]	/* 1 value pushed */
68 
SCVTCI[ ]	/* SetCVTCutIn */
PUSHW[ ]	/* 2 values pushed */
9 3 
SDS[ ]	/* SetDeltaShiftInGState */
SDB[ ]	/* SetDeltaBaseInGState */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
1 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROUND[01]	/* Round */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
2 
FDEF[ ]	/* FunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
1 
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
3 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
MD[0]	/* MeasureDistance */
ABS[ ]	/* Absolute */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
EIF[ ]	/* EndIf */
MDAP[1]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
ROUND[01]	/* Round */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
EQ[ ]	/* Equal */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64 
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
ROUND[01]	/* Round */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
EQ[ ]	/* Equal */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64 
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MSIRP[0]	/* MoveStackIndirRelPt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
4 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
ROLL[ ]	/* RollTopThreeStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
ROUND[10]	/* Round */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
ROUND[10]	/* Round */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
ROLL[ ]	/* RollTopThreeStack */
EIF[ ]	/* EndIf */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
5 
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
128 
WCVTP[ ]	/* WriteCVTInPixels */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64 
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
192 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
192 
WCVTP[ ]	/* WriteCVTInPixels */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
6 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROUND[01]	/* Round */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
RDTG[ ]	/* RoundDownToGrid */
ROUND[01]	/* Round */
RTG[ ]	/* RoundToGrid */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
7 
FDEF[ ]	/* FunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
6 
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
8 
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0 
EIF[ ]	/* EndIf */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
128 
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHW[ ]	/* 1 value pushed */
192 
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHW[ ]	/* 1 value pushed */
256 
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHW[ ]	/* 1 value pushed */
320 
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
3 
MINDEX[ ]	/* MoveXToTopStack */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
RCVT[ ]	/* ReadCVT */
PUSHW[ ]	/* 1 value pushed */
384 
LT[ ]	/* LessThan */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHW[ ]	/* 1 value pushed */
384 
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
9 
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
WCVTP[ ]	/* WriteCVTInPixels */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */</string>
		</dict>
		<dict>
			<key>name</key>
			<string>CVT Table</string>
			<key>value</key>
			<string>(
    20,
    89,
    87,
    0,
    13,
    665,
    12
)</string>
		</dict>
	</array>
	<key>com.schriftgestaltung.fontMasterID</key>
	<string>m01</string>
	<key>com.schriftgestaltung.glyphOrder</key>
	<array>
		<string>.notdef</string>
		<string>.null</string>
		<string>CR</string>
		<string>space</string>
		<string>one</string>
		<string>two</string>
		<string>three</string>
		<string>four</string>
		<string>five</string>
		<string>six</string>
		<string>seven</string>
		<string>eight</string>
		<string>nine</string>
		<string>zero</string>
		<string>A</string>
		<string>B</string>
		<string>C</string>
		<string>D</string>
		<string>E</string>
		<string>F</string>
		<string>G</string>
		<string>H</string>
		<string>I</string>
		<string>J</string>
		<string>K</string>
		<string>L</string>
		<string>M</string>
		<string>N</string>
		<string>O</string>
		<string>P</string>
		<string>Q</string>
		<string>R</string>
		<string>S</string>
		<string>T</string>
		<string>U</string>
		<string>V</string>
		<string>W</string>
		<string>X</string>
		<string>Y</string>
		<string>Z</string>
		<string>hyphen</string>
	</array>
	<key>com.schriftgestaltung.master.name</key>
	<string>Medium</string>
	<key>com.schriftgestaltung.useNiceNames</key>
	<false/>
	<key>public.glyphOrder</key>
	<array>
		<string>.notdef</string>
		<string>.null</string>
		<string>CR</string>
		<string>space</string>
		<string>one</string>
		<string>two</string>
		<string>three</string>
		<string>four</string>
		<string>five</string>
		<string>six</string>
		<string>seven</string>
		<string>eight</string>
		<string>nine</string>
		<string>zero</string>
		<string>A</string>
		<string>B</string>
		<string>C</string>
		<string>D</string>
		<string>E</string>
		<string>F</string>
		<string>G</string>
		<string>H</string>
		<string>I</string>
		<string>J</string>
		<string>K</string>
		<string>L</string>
		<string>M</string>
		<string>N</string>
		<string>O</string>
		<string>P</string>
		<string>Q</string>
		<string>R</string>
		<string>S</string>
		<string>T</string>
		<string>U</string>
		<string>V</string>
		<string>W</string>
		<string>X</string>
		<string>Y</string>
		<string>Z</string>
		<string>hyphen</string>
	</array>
</dict>
</plist>
